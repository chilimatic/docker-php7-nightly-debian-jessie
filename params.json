{"name":"Docker-php7-nightly-debian-jessy","tagline":"Docker Container with supervisor which downloads the latest master and initializes only a php-fpm instance","body":"# docker-php7-nightly-debian-jessy\r\nDocker Container with supervisor which downloads the latest master and initializes only php-fpm instance based on php7\r\n\r\nWhy another one ? I don't use Ubuntu and I'm not a fan of having to many services in a container -> the idea is to have the **PHP-FPM listen to the port 8099** on the outside and the **path/to/the/project mounted on the inside** so I can choose whatever server on the outside I'd like.\r\n\r\n## FYI about Docker \r\nFirst of all this is Docker <-> it's based on LXC which means it's a virtualisation within the linux kernel. \r\n\r\nThis is not like Vagrant which is a Batch System to store states / versions of complete hybrid virtualisations. \r\n\r\nDocker is as mentioned before a linux container (lxc). Hence needs less resources but does not support Windows or Mac on a native lvl for more information please check [http://boot2docker.io/ ](http://boot2docker.io/ ) as a Mac user, as a windows user, I'm sorry afaik you need a VM <-> I would recommend Ubuntu since the packages for ubuntu are compiled and maintained by the zend guys. Which excludes this docker container unless you specifically want Debian Jessie.\r\n\r\nPlease do not mistake a service container with a complete virtualisation like VBOX or VM, ..\r\n\r\n## FYI PHP7 \r\nPHP 7 atm (**2015-05-10**) is as we all should know still in Development so a lot of external extensions are not working due to the renaming of c header files and changing of the inner structure. So the compilation is ending in fatal errors. I tried it with **redis**, **mongo** and **memcached**\r\n\r\nDuring the compilation there are several errors which I ignored.\r\n\r\n## Configurations\r\nI compiled it manually you can have a look about the configuration settings (./configure) at the following sources [phpinternals](http://www.phpinternalsbook.com/build_system/building_php.html) or [php.net](http://php.net/manual/en/configure.about.php) and ofc the bash approach `./configure --help | less`\r\n\r\n## Supervisor \r\nSince Docker is not Vagrant the start scripts can not simply be put in the init.d or system.d structure and triggered. Many other boxes use internal batches/scripts [/usr/bin...] I followed the OPs approach and used the supervisor. \r\n\r\nYou can have a look at the supervisord.conf and see how a rather lazy approach has been done. Which is less work than copying batch files and trigger them via bashrc or other approaches.But that is taste I guess.\r\n\r\n## FPM \r\nThe FPM config **php-fpm.conf** is only setting the pid folder and the error folder.\r\nThe **User and Group** which are for the workers [are running as those] are in the **www.conf** as well as the **listenport 8080** on the inside.\r\n\r\nI specified a log files as well on the inside ofc -> please read tl;dr to access it\r\n\r\nSince I don't expect a lot of OPs knowledge from a common Dev (the have other concerns) this is already pre-configured and listens to the 8099 port on your host machine.\r\n\r\nI didn't want to bother with doing the socket approach which would require more detailed knowledge from the user. Although it's pretty easy once you understand the [docker basics](https://docs.docker.com/articles/basics/) please do use it sockets are faster than TCP. I wanted to keep this accessible for people who just want to code.\r\n\r\nThere are a lot of .inis which have no use since you can't compile the extensions, still I left them in there because who know's what's in 2-3 Months.\r\n\r\n## General Knowledge\r\n\r\n**It's important that your data is accessible in the Container**\r\n`-v /var/www:/var/www <nameofyourchoosing>`\r\nthis is a basic mapping of the outside to the inside <-> make sure it has the proper permissions \r\ngo with www-data this the common apache / nginx user|group and is available within debian. \r\n\r\nif you really don't have a clue and this is your private machine (VM) just change the mod of all files to 0777 this is the admin nightmare but the usual Dev solution.\r\n\r\nthis is a basic setup that should work with every linux version that supports docker **except the packages | apt vs yum vs rpm ...**\r\n\r\n`docker run -p 127.0.0.1:8099:8080` maps your localhost:8099 to the internal container port 8080 if you change the fpm config please do not forget to adapt this setting you can use autoport mapping :) please consult the [docker basics](https://docs.docker.com/articles/basics/) \r\n\r\nI added an nginx example and an Apache2.4 example and ofc the basics to create / start / access Docker in the tl;dr section.\r\n\r\n***\r\n\r\n# TL;DR\r\nBasic usage\r\ninside the repos root dir:\r\n\r\n`docker build -t <nameofyourchoosing> .`\r\n\r\nthen\r\n\r\n`docker run -d -p 127.0.0.1:8099:8080  -v /var/www:/var/www <nameofyourchoosing>`\r\n\r\n* **127.0.0.1:8099:8080 -> 8099 is the port on the outside**\r\n* **-v /inside/docker:/outside/docker**\r\n* **-d deamonize**\r\n\r\nto check if it's running\r\n`docker ps`\r\n\r\nto login as root into the bash\r\n`docker exec -it <containerID> bash`\r\n\r\nto get nginx to pipe the request to php-fpm\r\n\r\n      `  location ~ [^/]\\.php(/|$) {\r\n                fastcgi_split_path_info ^(.+?\\.php)(/.*)$;\r\n                # NOTE: You should have \"cgi.fix_pathinfo = 0;\" in php.ini\r\n                if (!-f $document_root$fastcgi_script_name) {\r\n                        return 404;\r\n                }\r\n\r\n                # With php5-cgi alone:\r\n                fastcgi_pass 127.0.0.1:8099;\r\n                fastcgi_index index.php;\r\n                include fastcgi_params;\r\n        } `\r\n\r\nto get the apache2.4\r\nthose two modules need to be loaded !\r\n#\r\nLoadModule proxy_module modules/mod_proxy.so\r\nLoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so\r\n#\r\ninside the virtualhost\r\nProxyPassMatch ^/(.*\\.php(/.*)?)$ fcgi://127.0.0.1:8099/path/to/your/documentroot/$1\r\nDirectoryIndex /index.php\r\n\r\n\r\n\r\nAnd now to the glosar of all pages consulted or used during the last 24 hours building this container \r\n### apache\r\n* https://wiki.apache.org/httpd/PHP-FPM\r\n* http://httpd.apache.org/docs/current/mod/core.html\r\n\r\n### php\r\n* https://github.com/php-memcached-dev/php-memcached <-> compilation error\r\n* http://pecl.php.net/package/memcached\r\n* http://www.sohailriaz.com/how-to-install-memcached-with-memcache-php-extension-on-centos-5x/\r\n* https://github.com/phpredis/phpredis\r\n* https://github.com/mongodb/mongo-php-driver.git\r\n* http://www.phpinternalsbook.com/build_system/building_php.html \r\n* http://php.net/manual/en/configure.about.php\r\n* http://gediminasm.org/post/compile-php\r\n* http://php.net/manual/en/install.fpm.configuration.php\r\n* http://php.net/manual/de/configuration.php\r\n* http://superuser.com/questions/408294/how-can-i-enable-readline-for-php-5-4-on-ubuntu-11-10\r\n* http://php.net/manual/en/install.unix.nginx.php\r\n* https://github.com/php/php-src\r\n* https://github.com/drj-io/php7-debian-build\r\n* http://repos.zend.com/zend-server/early-access/php7/\r\n* https://git.php.net/\r\n* https://drive.google.com/file/d/0B3UKOMH_4lgBUTdjUGxIZ3l1Ukk/view\r\n* https://wiki.php.net/phpng-int\r\n\r\n###docker\r\n* https://docs.docker.com/userguide/dockervolumes/\r\n* http://nathanleclaire.com/blog/2014/07/12/10-docker-tips-and-tricks-that-will-make-you-sing-a-whale-song-of-joy/\r\n* https://coreos.com/docs/launching-containers/building/customizing-docker/\r\n* https://docs.docker.com/articles/using_supervisord/\r\n* http://boot2docker.io/\r\n* https://github.com/docker/docker/blob/master/docs/sources/articles/dockerfile_best-practices.md\r\n* https://docs.docker.com/reference/builder/#expose\r\n* https://github.com/likol/docker-php7-fpm\r\n* https://docs.docker.com/userguide/dockerizing/\r\n* https://docs.docker.com/articles/networking/\r\n* https://docs.docker.com/reference/commandline/cli/\r\n* http://geoffrey.io/a-php-development-environment-with-docker.html\r\n* https://github.com/janatzend/docker-php7-nightly-build\r\n\r\n### system.d\r\n* https://github.com/systemd/php/blob/master/php-fpm.service\r\n\r\n\r\nI hope I helped at least one person otherwise at least I learned something new :)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}